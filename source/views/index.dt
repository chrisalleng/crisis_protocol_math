extends layout

block content    
    .row
        .large-12.columns
            h1 X-Wing Math Simulator

            form#simulate-form(action="simulate.json", method="GET")

                - void slider_control(string name, string label, int min, int max, int init)
                    .row
                        .large-6.small-8.columns
                            .input-group
                                span.input-group-label #{label}
                                input.input-group-field(id="#{name}_output", name="#{name}", type="number")
                        .large-6.small-4.columns
                            .slider(data-slider, data-initial-start="#{init}", data-start="#{min}", data-end="#{max}")
                                span.slider-handle(data-slider-handle, role="slider", tabindex="1", aria-controls="#{name}_output")
                                span(data-slider-fill)

                .row
                    .medium-6.columns
                        .callout.alert
                            - slider_control("attack_dice",               "Attack Dice",  1, 6, 3);
                            - slider_control("attack_focus_token_count",  "Focus Tokens", 0, 2, 0);
                            - slider_control("attack_target_lock_count",  "Target Locks", 0, 2, 0);

                    .medium-6.columns
                        .callout.success
                            - slider_control("defense_dice",              "Defense Dice", 0, 6, 3);
                            - slider_control("defense_focus_token_count", "Focus Tokens", 0, 2, 0);
                            - slider_control("defense_evade_token_count", "Evade Tokens", 0, 2, 0);

                button#simulate.button(type="submit") Simulate

            div
                canvas#pdf-canvas
    
    

    script.
        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(231,233,237)'
        };
        var chart_data = {
            labels: ["0", "1", "2", "3", "4", "5", "6"],
            datasets: [{
                type: 'bar',
                label: 'Hits',
                backgroundColor: window.chartColors.red,
                data: []
            }, {
                type: 'bar',
                label: 'Crits',
                backgroundColor: window.chartColors.orange,
                data: []
            }]
        };

        window.onload = function() {
            var ctx = document.getElementById("pdf-canvas").getContext("2d");
            window.myMixedChart = new Chart(ctx, {
                type: 'bar',
                data: chart_data,
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Total Hit Probability Distribution'
                    },
                    legend: {
                        onClick: (e) => e.stopPropagation()
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: true,
                        callbacks: {
                            title: function(tooltipItems, data) {
                                var sum = 0;
                                tooltipItems.forEach(function(tooltipItem) {
                                    sum += data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                                });
                                return sum.toFixed(1) + '%';
                            },
                            label: function(tooltipItem, data) {
                                return '';
                            },
                        },
                    },
                    scales: {
                        xAxes: [{
                            stacked: true,
                        }],
                        yAxes: [{
                            stacked: true
                        }]
                    }
                }
            });
        };

        $(document).ready(function() {
            $('#simulate-form').submit(function(event) {
                event.preventDefault();
                
                $.getJSON('simulate.json', $("#simulate-form").serialize(), function(data) {
                    chart_data.datasets[0].data = data.hit_pdf;
                    chart_data.datasets[1].data = data.crit_pdf;
                    window.myMixedChart.update();
                });
            });
        });
